load(Medicar_Data.Rda)
load(Medicare_Data.Rda)
load("C:/RWD/Coursera/Developing Data Products/DataProducts Project/Medicare_Data.Rda")
table(data$Provider.State)
library(plyr)
agg <- ddply(data, c("Provider.State"), summarize,
TotalPayments = sum(Average.Total.Payments)
)
head(agg)
agg <- ddply(data, c("Provider.State"), summarize,
Payments = sum(Average.Total.Payments)
CoveredCharges = sum(Average.Coverd.Charges)
)
agg <- ddply(data, c("Provider.State"), summarize,
Payments = sum(Average.Total.Payments)
CoveredCharges = sum(Average.Coverd.Charges
)
agg <- ddply(data, c("Provider.State"), summarize,
Payments = sum(Average.Total.Payments),
CoveredCharges = sum(Average.Coverd.Charges)
)
agg <- ddply(data, c("Provider.State"), summarize,
Payments = sum(Average.Total.Payments),
CoveredCharges = sum(Average.Covered.Charges)
)
head(agg)
agg <- ddply(data, c("Provider.State"), summarize,
Payments = sum(Average.Total.Payments),
CoveredCharges = sum(Average.Covered.Charges)
PercentCovered = CoveredCharges/Payments
)
agg <- ddply(data, c("Provider.State"), summarize,
Payments = sum(Average.Total.Payments),
CoveredCharges = sum(Average.Covered.Charges),
PercentCovered = CoveredCharges/Payments
)
head(agg)
agg <- ddply(data, c("Provider.State"), summarize,
Payments = sum(Average.Total.Payments),
CoveredCharges = sum(Average.Covered.Charges),
PercentPayments = Payments/CoveredCharges
)
head(agg)
shiny::runApp()
shiny::runApp()
? selectInput
shiny::runApp()
shiny::runApp()
shiny::runApp()
#Next create a simple aggregated table of Charges and payments by state.
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
x <- agg[,1]
x
x <- agg[,Payments]
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='shay-o', token='62E82BD6B214C387776FF4831DA1CC36', secret='kFodRsN/y0a/bNp7G0RFqylSIZTK8VNS9kThx8D4')
library(shinyapps)
shiny::runApp()
deployApp()
load("./Medicare_Data.Rda")
deployApp()
load("Medicare_Data.Rda")
deployApp()
deployApp()
deployApp()
deployApp()
shiny::runApp()
shinyapps::setAccountInfo(name='shay-o', token='62E82BD6B214C387776FF4831DA1CC36', secret='kFodRsN/y0a/bNp7G0RFqylSIZTK8VNS9kThx8D4')
deployApp()
deployApp(appName = "DataProductsShay0")
if (!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/rsconnect")
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidify", "ramnathv/slidify")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
install_github("slidify/ramnathv")
install_github("ramnathv/slidify")
library(slidify)
install_github("rmamanthv/slidifyLibraries")
install_github("ramanthv/slidifyLibraries")
